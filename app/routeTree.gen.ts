/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OmitListImport } from './routes/omit-list'
import { Route as IndexImport } from './routes/index'
import { Route as HistoryDateImport } from './routes/history.$date'
import { Route as indexQueueImport } from './routes/(index)/queue'
import { Route as commitsCommitsImport } from './routes/(commits)/commits'
import { Route as indexQueueIndexImport } from './routes/(index)/queue.index'
import { Route as indexQueueAirtableIdImport } from './routes/(index)/queue.$airtableId'
import { Route as commitsCommitsShaImport } from './routes/(commits)/commits.$sha'

// Create/Update Routes

const OmitListRoute = OmitListImport.update({
  id: '/omit-list',
  path: '/omit-list',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryDateRoute = HistoryDateImport.update({
  id: '/history/$date',
  path: '/history/$date',
  getParentRoute: () => rootRoute,
} as any)

const indexQueueRoute = indexQueueImport.update({
  id: '/(index)/queue',
  path: '/queue',
  getParentRoute: () => rootRoute,
} as any)

const commitsCommitsRoute = commitsCommitsImport.update({
  id: '/(commits)/commits',
  path: '/commits',
  getParentRoute: () => rootRoute,
} as any)

const indexQueueIndexRoute = indexQueueIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => indexQueueRoute,
} as any)

const indexQueueAirtableIdRoute = indexQueueAirtableIdImport.update({
  id: '/$airtableId',
  path: '/$airtableId',
  getParentRoute: () => indexQueueRoute,
} as any)

const commitsCommitsShaRoute = commitsCommitsShaImport.update({
  id: '/$sha',
  path: '/$sha',
  getParentRoute: () => commitsCommitsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/omit-list': {
      id: '/omit-list'
      path: '/omit-list'
      fullPath: '/omit-list'
      preLoaderRoute: typeof OmitListImport
      parentRoute: typeof rootRoute
    }
    '/(commits)/commits': {
      id: '/(commits)/commits'
      path: '/commits'
      fullPath: '/commits'
      preLoaderRoute: typeof commitsCommitsImport
      parentRoute: typeof rootRoute
    }
    '/(index)/queue': {
      id: '/(index)/queue'
      path: '/queue'
      fullPath: '/queue'
      preLoaderRoute: typeof indexQueueImport
      parentRoute: typeof rootRoute
    }
    '/history/$date': {
      id: '/history/$date'
      path: '/history/$date'
      fullPath: '/history/$date'
      preLoaderRoute: typeof HistoryDateImport
      parentRoute: typeof rootRoute
    }
    '/(commits)/commits/$sha': {
      id: '/(commits)/commits/$sha'
      path: '/$sha'
      fullPath: '/commits/$sha'
      preLoaderRoute: typeof commitsCommitsShaImport
      parentRoute: typeof commitsCommitsImport
    }
    '/(index)/queue/$airtableId': {
      id: '/(index)/queue/$airtableId'
      path: '/$airtableId'
      fullPath: '/queue/$airtableId'
      preLoaderRoute: typeof indexQueueAirtableIdImport
      parentRoute: typeof indexQueueImport
    }
    '/(index)/queue/': {
      id: '/(index)/queue/'
      path: '/'
      fullPath: '/queue/'
      preLoaderRoute: typeof indexQueueIndexImport
      parentRoute: typeof indexQueueImport
    }
  }
}

// Create and export the route tree

interface commitsCommitsRouteChildren {
  commitsCommitsShaRoute: typeof commitsCommitsShaRoute
}

const commitsCommitsRouteChildren: commitsCommitsRouteChildren = {
  commitsCommitsShaRoute: commitsCommitsShaRoute,
}

const commitsCommitsRouteWithChildren = commitsCommitsRoute._addFileChildren(
  commitsCommitsRouteChildren,
)

interface indexQueueRouteChildren {
  indexQueueAirtableIdRoute: typeof indexQueueAirtableIdRoute
  indexQueueIndexRoute: typeof indexQueueIndexRoute
}

const indexQueueRouteChildren: indexQueueRouteChildren = {
  indexQueueAirtableIdRoute: indexQueueAirtableIdRoute,
  indexQueueIndexRoute: indexQueueIndexRoute,
}

const indexQueueRouteWithChildren = indexQueueRoute._addFileChildren(
  indexQueueRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/omit-list': typeof OmitListRoute
  '/commits': typeof commitsCommitsRouteWithChildren
  '/queue': typeof indexQueueRouteWithChildren
  '/history/$date': typeof HistoryDateRoute
  '/commits/$sha': typeof commitsCommitsShaRoute
  '/queue/$airtableId': typeof indexQueueAirtableIdRoute
  '/queue/': typeof indexQueueIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/omit-list': typeof OmitListRoute
  '/commits': typeof commitsCommitsRouteWithChildren
  '/history/$date': typeof HistoryDateRoute
  '/commits/$sha': typeof commitsCommitsShaRoute
  '/queue/$airtableId': typeof indexQueueAirtableIdRoute
  '/queue': typeof indexQueueIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/omit-list': typeof OmitListRoute
  '/(commits)/commits': typeof commitsCommitsRouteWithChildren
  '/(index)/queue': typeof indexQueueRouteWithChildren
  '/history/$date': typeof HistoryDateRoute
  '/(commits)/commits/$sha': typeof commitsCommitsShaRoute
  '/(index)/queue/$airtableId': typeof indexQueueAirtableIdRoute
  '/(index)/queue/': typeof indexQueueIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/omit-list'
    | '/commits'
    | '/queue'
    | '/history/$date'
    | '/commits/$sha'
    | '/queue/$airtableId'
    | '/queue/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/omit-list'
    | '/commits'
    | '/history/$date'
    | '/commits/$sha'
    | '/queue/$airtableId'
    | '/queue'
  id:
    | '__root__'
    | '/'
    | '/omit-list'
    | '/(commits)/commits'
    | '/(index)/queue'
    | '/history/$date'
    | '/(commits)/commits/$sha'
    | '/(index)/queue/$airtableId'
    | '/(index)/queue/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OmitListRoute: typeof OmitListRoute
  commitsCommitsRoute: typeof commitsCommitsRouteWithChildren
  indexQueueRoute: typeof indexQueueRouteWithChildren
  HistoryDateRoute: typeof HistoryDateRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OmitListRoute: OmitListRoute,
  commitsCommitsRoute: commitsCommitsRouteWithChildren,
  indexQueueRoute: indexQueueRouteWithChildren,
  HistoryDateRoute: HistoryDateRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/omit-list",
        "/(commits)/commits",
        "/(index)/queue",
        "/history/$date"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/omit-list": {
      "filePath": "omit-list.tsx"
    },
    "/(commits)/commits": {
      "filePath": "(commits)/commits.tsx",
      "children": [
        "/(commits)/commits/$sha"
      ]
    },
    "/(index)/queue": {
      "filePath": "(index)/queue.tsx",
      "children": [
        "/(index)/queue/$airtableId",
        "/(index)/queue/"
      ]
    },
    "/history/$date": {
      "filePath": "history.$date.tsx"
    },
    "/(commits)/commits/$sha": {
      "filePath": "(commits)/commits.$sha.tsx",
      "parent": "/(commits)/commits"
    },
    "/(index)/queue/$airtableId": {
      "filePath": "(index)/queue.$airtableId.tsx",
      "parent": "/(index)/queue"
    },
    "/(index)/queue/": {
      "filePath": "(index)/queue.index.tsx",
      "parent": "/(index)/queue"
    }
  }
}
ROUTE_MANIFEST_END */
